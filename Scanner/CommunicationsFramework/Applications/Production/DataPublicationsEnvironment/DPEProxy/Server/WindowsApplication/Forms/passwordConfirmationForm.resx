<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="resource.Image1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>